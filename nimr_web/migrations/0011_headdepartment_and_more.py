# Generated by Django 4.1 on 2022-12-23 01:43

import _socket
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("nimr_web", "0010_sliderphoto_historicalsliderphoto"),
    ]

    operations = [
        migrations.CreateModel(
            name="HeadDepartment",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("head_name", models.CharField(max_length=160, verbose_name="Head Name")),
                (
                    "head_department",
                    models.CharField(max_length=200, verbose_name="Department Name"),
                ),
                ("head_metrics", models.IntegerField(verbose_name="Metrics")),
                (
                    "head_photo",
                    models.FileField(upload_to="nimr_web/static/assets/images/team"),
                ),
                (
                    "head_photo_link",
                    models.CharField(
                        blank=True,
                        help_text="Use this if image is located on a different server",
                        max_length=200,
                        null=True,
                        verbose_name="Image path",
                    ),
                ),
            ],
            options={
                "verbose_name": "Head of Department",
                "verbose_name_plural": "Head of Department",
                "ordering": ("-modified", "-created"),
                "get_latest_by": "modified",
                "abstract": False,
                "default_permissions": ("add", "change", "delete", "view", "export", "import"),
            },
        ),
        migrations.RemoveField(
            model_name="historicalsliderphoto",
            name="slider_metric",
        ),
        migrations.RemoveField(
            model_name="sliderphoto",
            name="slider_metric",
        ),
        migrations.AddField(
            model_name="historicalsliderphoto",
            name="slider_metrics",
            field=models.IntegerField(default=0, verbose_name="Ordering metrics"),
        ),
        migrations.AddField(
            model_name="historicalstaffprofile",
            name="staff_photo_link",
            field=models.CharField(
                blank=True,
                help_text="Use this if image is located on a different server",
                max_length=200,
                null=True,
                verbose_name="Image Link",
            ),
        ),
        migrations.AddField(
            model_name="sliderphoto",
            name="slider_metrics",
            field=models.IntegerField(default=0, verbose_name="Ordering metrics"),
        ),
        migrations.AddField(
            model_name="staffprofile",
            name="staff_photo_link",
            field=models.CharField(
                blank=True,
                help_text="Use this if image is located on a different server",
                max_length=200,
                null=True,
                verbose_name="Image Link",
            ),
        ),
        migrations.AlterField(
            model_name="centremanagerphoto",
            name="centre_manager",
            field=models.FileField(
                default=None, upload_to="nimr_web/static/assets/images/resource"
            ),
        ),
        migrations.AlterField(
            model_name="centremanagerphoto",
            name="manager_photo_link",
            field=models.CharField(
                blank=True,
                default=None,
                help_text="Use this if image is located on a different server",
                max_length=100,
                null=True,
                verbose_name="Link to an Image",
            ),
        ),
        migrations.AlterField(
            model_name="historicalcentremanagerphoto",
            name="centre_manager",
            field=models.TextField(default=None, max_length=100),
        ),
        migrations.AlterField(
            model_name="historicalcentremanagerphoto",
            name="manager_photo_link",
            field=models.CharField(
                blank=True,
                default=None,
                help_text="Use this if image is located on a different server",
                max_length=100,
                null=True,
                verbose_name="Link to an Image",
            ),
        ),
        migrations.AlterField(
            model_name="historicalstaffprofile",
            name="staff_photo",
            field=models.TextField(max_length=100),
        ),
        migrations.AlterField(
            model_name="staffprofile",
            name="staff_photo",
            field=models.FileField(upload_to="nimr_web/static/assets/images/team"),
        ),
        migrations.CreateModel(
            name="HistoricalHeadDepartment",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                ("head_name", models.CharField(max_length=160, verbose_name="Head Name")),
                (
                    "head_department",
                    models.CharField(max_length=200, verbose_name="Department Name"),
                ),
                ("head_metrics", models.IntegerField(verbose_name="Metrics")),
                ("head_photo", models.TextField(max_length=100)),
                (
                    "head_photo_link",
                    models.CharField(
                        blank=True,
                        help_text="Use this if image is located on a different server",
                        max_length=200,
                        null=True,
                        verbose_name="Image path",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Head of Department",
                "verbose_name_plural": "historical Head of Department",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
